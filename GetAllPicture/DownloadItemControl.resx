<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2fQAAAAASUVORK5CYII=
</value>
  </data>
</root>